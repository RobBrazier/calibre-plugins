name: "Build"

on:
  pull_request:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install tools from mise
        uses: jdx/mise-action@63a673876c7072c1d6ecb2049c0d572976c83b22 # v2

      - name: Install the project
        run: task install

      - name: Run Unit Tests
        run: task test -- --cov-report xml --junitxml=junit.xml -o junit_family=legacy

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@015f24e6818733317a2da2edd6290ab26238649a # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@9739113ad922ea0a9abb4b2c0f8bf6a4aa8ef820 # v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - name: Install tools from mise
        uses: jdx/mise-action@63a673876c7072c1d6ecb2049c0d572976c83b22 # v2

      - name: Install the project
        run: task install

      - name: Build Plugins
        run: task package

      - name: Upload Plugin Artifacts
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
        with:
          name: built-plugins
          path: |
            dist/*.zip

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.ref_type == 'tag'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: built-plugins

      - name: Split tag name
        id: release-info
        run: |
          # Remove 'refs/tags/' if present in GITHUB_REF
          TAG_NAME=${GITHUB_REF#refs/tags/}
          # Split on hyphen and set plugin name
          PLUGIN=${TAG_NAME%%-*}
          # Get everything after the first hyphen for version
          VERSION=${TAG_NAME#*-}

          # Set outputs
          echo "plugin=${PLUGIN}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Generate a changelog
        uses: orhun/git-cliff-action@e364f07989916ffb9f50d7ef6c0a8c48082c2792 # v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --current --strip all \
            --include-path 'plugins/${{ steps.release-info.outputs.plugin }}/**/*' --include-path 'libs/**/*' \
            --tag-pattern '${{ steps.release-info.outputs.plugin }}-*' \
            --tag '${{ steps.release-info.outputs.plugin}}-${{steps.release-info.outputs.version}}' \
            --github-repo ${{ github.repository }} \
            --github-token ${{ secrets.GITHUB_TOKEN }}

      - name: Upload the binary releases
        uses: svenstaro/upload-release-action@04733e069f2d7f7f0b4aebc4fbdbce8613b03ccd # v2
        with:
          file_glob: true
          file: ${{ steps.release-info.outputs.plugin}}-*.zip
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref }}
          body: ${{ steps.git-cliff.outputs.content }}
