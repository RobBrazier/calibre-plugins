name: "Build"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ vars.ACTION_RUNNER || 'ubuntu-latest' }}

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0

      - name: Install tools from mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0

      - name: Install calibre dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libegl1 libopengl0 libxcb-cursor0

      - name: Download calibre sources
        run: task calibre:source

      - name: Get calibre version
        id: calibre
        run: echo "version=$(cat .calibre/source/.version)" >> $GITHUB_OUTPUT

      - name: Install calibre
        run: sudo -v && wget -nv -O- https://download.calibre-ebook.com/linux-installer.sh | sudo sh /dev/stdin version=${{ steps.calibre.outputs.version }}

      - name: Cache uv
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Install the project
        run: task install

      - name: Run Unit Tests
        run: task test -- --cov-report xml --junitxml=junit.xml -o junit_family=legacy

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ${{ vars.ACTION_RUNNER || 'ubuntu-latest' }}
    needs:
      - test
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0

      - name: Install tools from mise
        uses: jdx/mise-action@5ac50f778e26fac95da98d50503682459e86d566 # v3.2.0

      - name: Cache uv
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('uv.lock') }}

      - name: Install the project
        run: task install

      - name: Build Plugins
        run: task package

      - name: Upload Plugin Artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: built-plugins
          path: |
            dist/*.zip

  release:
    runs-on: ${{ vars.ACTION_RUNNER || 'ubuntu-latest' }}
    needs:
      - build
    if: github.ref_type == 'tag'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4.3.0
        with:
          fetch-depth: 0

      - name: Install tools from mise
        uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac # v2.4.4

      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: built-plugins
          path: ${{ github.workspace }}/dist

      - name: Generate Changelog and Release
        run: |
          bash scripts/release.sh "${GITHUB_REF#refs/tags/}"
        env:
          GH_TOKEN: ${{ github.token }}
          GITHUB_TOKEN: ${{ github.token }}
          GITHUB_REPO: ${{ github.repository }}
